*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 28.02.2025 at 19:45:01
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*
*...processing: ZV_ODATAV4_ENT..................................*
FORM GET_DATA_ZV_ODATAV4_ENT.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZODATAV4_ENTITY WHERE
(VIM_WHERETAB) .
    CLEAR ZV_ODATAV4_ENT .
ZV_ODATAV4_ENT-MANDT =
ZODATAV4_ENTITY-MANDT .
ZV_ODATAV4_ENT-SERVICE_ID =
ZODATAV4_ENTITY-SERVICE_ID .
ZV_ODATAV4_ENT-SERVICE_VERSION =
ZODATAV4_ENTITY-SERVICE_VERSION .
ZV_ODATAV4_ENT-VIEW_NAME =
ZODATAV4_ENTITY-VIEW_NAME .
ZV_ODATAV4_ENT-ENTITY_INTERNAL_NAME =
ZODATAV4_ENTITY-ENTITY_INTERNAL_NAME .
ZV_ODATAV4_ENT-ENTITY_EDM_NAME =
ZODATAV4_ENTITY-ENTITY_EDM_NAME .
ZV_ODATAV4_ENT-ENTITYSET_INTERNAL_NAME =
ZODATAV4_ENTITY-ENTITYSET_INTERNAL_NAME .
ZV_ODATAV4_ENT-ENTITYSET_EDM_NAME =
ZODATAV4_ENTITY-ENTITYSET_EDM_NAME .
ZV_ODATAV4_ENT-KEYS =
ZODATAV4_ENTITY-KEYS .
ZV_ODATAV4_ENT-CREATEABLE =
ZODATAV4_ENTITY-CREATEABLE .
ZV_ODATAV4_ENT-UPDATEABLE =
ZODATAV4_ENTITY-UPDATEABLE .
ZV_ODATAV4_ENT-DELETABLE =
ZODATAV4_ENTITY-DELETABLE .
ZV_ODATAV4_ENT-INACTIVE =
ZODATAV4_ENTITY-INACTIVE .
<VIM_TOTAL_STRUC> = ZV_ODATAV4_ENT.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZV_ODATAV4_ENT .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZV_ODATAV4_ENT.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZV_ODATAV4_ENT-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZODATAV4_ENTITY WHERE
  SERVICE_ID = ZV_ODATAV4_ENT-SERVICE_ID AND
  SERVICE_VERSION = ZV_ODATAV4_ENT-SERVICE_VERSION AND
  VIEW_NAME = ZV_ODATAV4_ENT-VIEW_NAME .
    IF SY-SUBRC = 0.
    DELETE ZODATAV4_ENTITY .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZODATAV4_ENTITY WHERE
  SERVICE_ID = ZV_ODATAV4_ENT-SERVICE_ID AND
  SERVICE_VERSION = ZV_ODATAV4_ENT-SERVICE_VERSION AND
  VIEW_NAME = ZV_ODATAV4_ENT-VIEW_NAME .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZODATAV4_ENTITY.
    ENDIF.
ZODATAV4_ENTITY-MANDT =
ZV_ODATAV4_ENT-MANDT .
ZODATAV4_ENTITY-SERVICE_ID =
ZV_ODATAV4_ENT-SERVICE_ID .
ZODATAV4_ENTITY-SERVICE_VERSION =
ZV_ODATAV4_ENT-SERVICE_VERSION .
ZODATAV4_ENTITY-VIEW_NAME =
ZV_ODATAV4_ENT-VIEW_NAME .
ZODATAV4_ENTITY-ENTITY_INTERNAL_NAME =
ZV_ODATAV4_ENT-ENTITY_INTERNAL_NAME .
ZODATAV4_ENTITY-ENTITY_EDM_NAME =
ZV_ODATAV4_ENT-ENTITY_EDM_NAME .
ZODATAV4_ENTITY-ENTITYSET_INTERNAL_NAME =
ZV_ODATAV4_ENT-ENTITYSET_INTERNAL_NAME .
ZODATAV4_ENTITY-ENTITYSET_EDM_NAME =
ZV_ODATAV4_ENT-ENTITYSET_EDM_NAME .
ZODATAV4_ENTITY-KEYS =
ZV_ODATAV4_ENT-KEYS .
ZODATAV4_ENTITY-CREATEABLE =
ZV_ODATAV4_ENT-CREATEABLE .
ZODATAV4_ENTITY-UPDATEABLE =
ZV_ODATAV4_ENT-UPDATEABLE .
ZODATAV4_ENTITY-DELETABLE =
ZV_ODATAV4_ENT-DELETABLE .
ZODATAV4_ENTITY-INACTIVE =
ZV_ODATAV4_ENT-INACTIVE .
    IF SY-SUBRC = 0.
    UPDATE ZODATAV4_ENTITY ##WARN_OK.
    ELSE.
    INSERT ZODATAV4_ENTITY .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZV_ODATAV4_ENT-UPD_FLAG,
STATUS_ZV_ODATAV4_ENT-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZV_ODATAV4_ENT.
  SELECT SINGLE * FROM ZODATAV4_ENTITY WHERE
SERVICE_ID = ZV_ODATAV4_ENT-SERVICE_ID AND
SERVICE_VERSION = ZV_ODATAV4_ENT-SERVICE_VERSION AND
VIEW_NAME = ZV_ODATAV4_ENT-VIEW_NAME .
ZV_ODATAV4_ENT-MANDT =
ZODATAV4_ENTITY-MANDT .
ZV_ODATAV4_ENT-SERVICE_ID =
ZODATAV4_ENTITY-SERVICE_ID .
ZV_ODATAV4_ENT-SERVICE_VERSION =
ZODATAV4_ENTITY-SERVICE_VERSION .
ZV_ODATAV4_ENT-VIEW_NAME =
ZODATAV4_ENTITY-VIEW_NAME .
ZV_ODATAV4_ENT-ENTITY_INTERNAL_NAME =
ZODATAV4_ENTITY-ENTITY_INTERNAL_NAME .
ZV_ODATAV4_ENT-ENTITY_EDM_NAME =
ZODATAV4_ENTITY-ENTITY_EDM_NAME .
ZV_ODATAV4_ENT-ENTITYSET_INTERNAL_NAME =
ZODATAV4_ENTITY-ENTITYSET_INTERNAL_NAME .
ZV_ODATAV4_ENT-ENTITYSET_EDM_NAME =
ZODATAV4_ENTITY-ENTITYSET_EDM_NAME .
ZV_ODATAV4_ENT-KEYS =
ZODATAV4_ENTITY-KEYS .
ZV_ODATAV4_ENT-CREATEABLE =
ZODATAV4_ENTITY-CREATEABLE .
ZV_ODATAV4_ENT-UPDATEABLE =
ZODATAV4_ENTITY-UPDATEABLE .
ZV_ODATAV4_ENT-DELETABLE =
ZODATAV4_ENTITY-DELETABLE .
ZV_ODATAV4_ENT-INACTIVE =
ZODATAV4_ENTITY-INACTIVE .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZV_ODATAV4_ENT USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZV_ODATAV4_ENT-SERVICE_ID TO
ZODATAV4_ENTITY-SERVICE_ID .
MOVE ZV_ODATAV4_ENT-SERVICE_VERSION TO
ZODATAV4_ENTITY-SERVICE_VERSION .
MOVE ZV_ODATAV4_ENT-VIEW_NAME TO
ZODATAV4_ENTITY-VIEW_NAME .
MOVE ZV_ODATAV4_ENT-MANDT TO
ZODATAV4_ENTITY-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZODATAV4_ENTITY'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZODATAV4_ENTITY TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZODATAV4_ENTITY'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZV_ODATAV4_NPROP................................*
FORM GET_DATA_ZV_ODATAV4_NPROP.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZODATAV4_NPROP WHERE
(VIM_WHERETAB) .
    CLEAR ZV_ODATAV4_NPROP .
ZV_ODATAV4_NPROP-MANDT =
ZODATAV4_NPROP-MANDT .
ZV_ODATAV4_NPROP-SERVICE_ID =
ZODATAV4_NPROP-SERVICE_ID .
ZV_ODATAV4_NPROP-SERVICE_VERSION =
ZODATAV4_NPROP-SERVICE_VERSION .
ZV_ODATAV4_NPROP-VIEW_NAME =
ZODATAV4_NPROP-VIEW_NAME .
ZV_ODATAV4_NPROP-PROPERTY_INTERNAL_NAME =
ZODATAV4_NPROP-PROPERTY_INTERNAL_NAME .
ZV_ODATAV4_NPROP-PROPERTY_EDM_NAME =
ZODATAV4_NPROP-PROPERTY_EDM_NAME .
ZV_ODATAV4_NPROP-TARGET_ENTITY_INTERNAL =
ZODATAV4_NPROP-TARGET_ENTITY_INTERNAL .
ZV_ODATAV4_NPROP-MULTIPLICITY =
ZODATAV4_NPROP-MULTIPLICITY .
ZV_ODATAV4_NPROP-DELETE_CASCADE =
ZODATAV4_NPROP-DELETE_CASCADE .
<VIM_TOTAL_STRUC> = ZV_ODATAV4_NPROP.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZV_ODATAV4_NPROP .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZV_ODATAV4_NPROP.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZV_ODATAV4_NPROP-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZODATAV4_NPROP WHERE
  SERVICE_ID = ZV_ODATAV4_NPROP-SERVICE_ID AND
  SERVICE_VERSION = ZV_ODATAV4_NPROP-SERVICE_VERSION AND
  VIEW_NAME = ZV_ODATAV4_NPROP-VIEW_NAME AND
  PROPERTY_INTERNAL_NAME = ZV_ODATAV4_NPROP-PROPERTY_INTERNAL_NAME .
    IF SY-SUBRC = 0.
    DELETE ZODATAV4_NPROP .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZODATAV4_NPROP WHERE
  SERVICE_ID = ZV_ODATAV4_NPROP-SERVICE_ID AND
  SERVICE_VERSION = ZV_ODATAV4_NPROP-SERVICE_VERSION AND
  VIEW_NAME = ZV_ODATAV4_NPROP-VIEW_NAME AND
  PROPERTY_INTERNAL_NAME = ZV_ODATAV4_NPROP-PROPERTY_INTERNAL_NAME .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR ZODATAV4_NPROP.
    ENDIF.
ZODATAV4_NPROP-MANDT =
ZV_ODATAV4_NPROP-MANDT .
ZODATAV4_NPROP-SERVICE_ID =
ZV_ODATAV4_NPROP-SERVICE_ID .
ZODATAV4_NPROP-SERVICE_VERSION =
ZV_ODATAV4_NPROP-SERVICE_VERSION .
ZODATAV4_NPROP-VIEW_NAME =
ZV_ODATAV4_NPROP-VIEW_NAME .
ZODATAV4_NPROP-PROPERTY_INTERNAL_NAME =
ZV_ODATAV4_NPROP-PROPERTY_INTERNAL_NAME .
ZODATAV4_NPROP-PROPERTY_EDM_NAME =
ZV_ODATAV4_NPROP-PROPERTY_EDM_NAME .
ZODATAV4_NPROP-TARGET_ENTITY_INTERNAL =
ZV_ODATAV4_NPROP-TARGET_ENTITY_INTERNAL .
ZODATAV4_NPROP-MULTIPLICITY =
ZV_ODATAV4_NPROP-MULTIPLICITY .
ZODATAV4_NPROP-DELETE_CASCADE =
ZV_ODATAV4_NPROP-DELETE_CASCADE .
    IF SY-SUBRC = 0.
    UPDATE ZODATAV4_NPROP ##WARN_OK.
    ELSE.
    INSERT ZODATAV4_NPROP .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZV_ODATAV4_NPROP-UPD_FLAG,
STATUS_ZV_ODATAV4_NPROP-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZV_ODATAV4_NPROP.
  SELECT SINGLE * FROM ZODATAV4_NPROP WHERE
SERVICE_ID = ZV_ODATAV4_NPROP-SERVICE_ID AND
SERVICE_VERSION = ZV_ODATAV4_NPROP-SERVICE_VERSION AND
VIEW_NAME = ZV_ODATAV4_NPROP-VIEW_NAME AND
PROPERTY_INTERNAL_NAME = ZV_ODATAV4_NPROP-PROPERTY_INTERNAL_NAME .
ZV_ODATAV4_NPROP-MANDT =
ZODATAV4_NPROP-MANDT .
ZV_ODATAV4_NPROP-SERVICE_ID =
ZODATAV4_NPROP-SERVICE_ID .
ZV_ODATAV4_NPROP-SERVICE_VERSION =
ZODATAV4_NPROP-SERVICE_VERSION .
ZV_ODATAV4_NPROP-VIEW_NAME =
ZODATAV4_NPROP-VIEW_NAME .
ZV_ODATAV4_NPROP-PROPERTY_INTERNAL_NAME =
ZODATAV4_NPROP-PROPERTY_INTERNAL_NAME .
ZV_ODATAV4_NPROP-PROPERTY_EDM_NAME =
ZODATAV4_NPROP-PROPERTY_EDM_NAME .
ZV_ODATAV4_NPROP-TARGET_ENTITY_INTERNAL =
ZODATAV4_NPROP-TARGET_ENTITY_INTERNAL .
ZV_ODATAV4_NPROP-MULTIPLICITY =
ZODATAV4_NPROP-MULTIPLICITY .
ZV_ODATAV4_NPROP-DELETE_CASCADE =
ZODATAV4_NPROP-DELETE_CASCADE .
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZV_ODATAV4_NPROP USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZV_ODATAV4_NPROP-SERVICE_ID TO
ZODATAV4_NPROP-SERVICE_ID .
MOVE ZV_ODATAV4_NPROP-SERVICE_VERSION TO
ZODATAV4_NPROP-SERVICE_VERSION .
MOVE ZV_ODATAV4_NPROP-VIEW_NAME TO
ZODATAV4_NPROP-VIEW_NAME .
MOVE ZV_ODATAV4_NPROP-PROPERTY_INTERNAL_NAME TO
ZODATAV4_NPROP-PROPERTY_INTERNAL_NAME .
MOVE ZV_ODATAV4_NPROP-MANDT TO
ZODATAV4_NPROP-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = 'ZODATAV4_NPROP'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN ZODATAV4_NPROP TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING 'ZODATAV4_NPROP'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
*...processing: ZV_V4_MSRV......................................*
FORM GET_DATA_ZV_V4_MSRV.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM /IWBEP/I_V4_MSRV WHERE
(VIM_WHERETAB) .
    CLEAR ZV_V4_MSRV .
ZV_V4_MSRV-SERVICE_ID =
/IWBEP/I_V4_MSRV-SERVICE_ID .
ZV_V4_MSRV-SERVICE_VERSION =
/IWBEP/I_V4_MSRV-SERVICE_VERSION .
    SELECT SINGLE * FROM /IWBEP/I_V4_MSRT WHERE
SERVICE_ID = /IWBEP/I_V4_MSRV-SERVICE_ID AND
SERVICE_VERSION = /IWBEP/I_V4_MSRV-SERVICE_VERSION AND
LANGUAGE = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZV_V4_MSRV-DESCRIPTION =
/IWBEP/I_V4_MSRT-DESCRIPTION .
    ENDIF.
<VIM_TOTAL_STRUC> = ZV_V4_MSRV.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY <VIM_XTOTAL_KEY>.
  <STATUS>-ALR_SORTED = 'R'.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZV_V4_MSRV .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK <ACTION> NE ORIGINAL.
MOVE <VIM_TOTAL_STRUC> TO ZV_V4_MSRV.
  IF <ACTION> = UPDATE_GELOESCHT.
    <ACTION> = GELOESCHT.
  ENDIF.
  CASE <ACTION>.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZV_V4_MSRV-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM /IWBEP/I_V4_MSRV WHERE
  SERVICE_ID = ZV_V4_MSRV-SERVICE_ID AND
  SERVICE_VERSION = ZV_V4_MSRV-SERVICE_VERSION .
    IF SY-SUBRC = 0.
    DELETE /IWBEP/I_V4_MSRV .
    ENDIF.
    DELETE FROM /IWBEP/I_V4_MSRT WHERE
    SERVICE_ID = /IWBEP/I_V4_MSRV-SERVICE_ID AND
    SERVICE_VERSION = /IWBEP/I_V4_MSRV-SERVICE_VERSION .
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY> BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM /IWBEP/I_V4_MSRV WHERE
  SERVICE_ID = ZV_V4_MSRV-SERVICE_ID AND
  SERVICE_VERSION = ZV_V4_MSRV-SERVICE_VERSION .
    IF SY-SUBRC <> 0.   "insert preprocessing: init WA
      CLEAR /IWBEP/I_V4_MSRV.
    ENDIF.
/IWBEP/I_V4_MSRV-SERVICE_ID =
ZV_V4_MSRV-SERVICE_ID .
/IWBEP/I_V4_MSRV-SERVICE_VERSION =
ZV_V4_MSRV-SERVICE_VERSION .
    IF SY-SUBRC = 0.
    UPDATE /IWBEP/I_V4_MSRV ##WARN_OK.
    ELSE.
    INSERT /IWBEP/I_V4_MSRV .
    ENDIF.
    SELECT SINGLE FOR UPDATE * FROM /IWBEP/I_V4_MSRT WHERE
    SERVICE_ID = /IWBEP/I_V4_MSRV-SERVICE_ID AND
    SERVICE_VERSION = /IWBEP/I_V4_MSRV-SERVICE_VERSION AND
    LANGUAGE = SY-LANGU .
      IF SY-SUBRC <> 0.   "insert preprocessing: init WA
        CLEAR /IWBEP/I_V4_MSRT.
/IWBEP/I_V4_MSRT-SERVICE_ID =
/IWBEP/I_V4_MSRV-SERVICE_ID .
/IWBEP/I_V4_MSRT-SERVICE_VERSION =
/IWBEP/I_V4_MSRV-SERVICE_VERSION .
/IWBEP/I_V4_MSRT-LANGUAGE =
SY-LANGU .
      ENDIF.
/IWBEP/I_V4_MSRT-DESCRIPTION =
ZV_V4_MSRV-DESCRIPTION .
    IF SY-SUBRC = 0.
    UPDATE /IWBEP/I_V4_MSRT ##WARN_OK.
    ELSE.
    INSERT /IWBEP/I_V4_MSRT .
    ENDIF.
    READ TABLE EXTRACT WITH KEY <VIM_XTOTAL_KEY>.
    IF SY-SUBRC EQ 0.
      <XACT> = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    <ACTION> = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZV_V4_MSRV-UPD_FLAG,
STATUS_ZV_V4_MSRV-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ENTRY_ZV_V4_MSRV.
  SELECT SINGLE * FROM /IWBEP/I_V4_MSRV WHERE
SERVICE_ID = ZV_V4_MSRV-SERVICE_ID AND
SERVICE_VERSION = ZV_V4_MSRV-SERVICE_VERSION .
ZV_V4_MSRV-SERVICE_ID =
/IWBEP/I_V4_MSRV-SERVICE_ID .
ZV_V4_MSRV-SERVICE_VERSION =
/IWBEP/I_V4_MSRV-SERVICE_VERSION .
    SELECT SINGLE * FROM /IWBEP/I_V4_MSRT WHERE
SERVICE_ID = /IWBEP/I_V4_MSRV-SERVICE_ID AND
SERVICE_VERSION = /IWBEP/I_V4_MSRV-SERVICE_VERSION AND
LANGUAGE = SY-LANGU .
    IF SY-SUBRC EQ 0.
ZV_V4_MSRV-DESCRIPTION =
/IWBEP/I_V4_MSRT-DESCRIPTION .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZV_V4_MSRV-DESCRIPTION .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZV_V4_MSRV USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: <TAB_KEY_X> TYPE X.
  CLEAR RC.
MOVE ZV_V4_MSRV-SERVICE_ID TO
/IWBEP/I_V4_MSRV-SERVICE_ID .
MOVE ZV_V4_MSRV-SERVICE_VERSION TO
/IWBEP/I_V4_MSRV-SERVICE_VERSION .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/IWBEP/I_V4_MSRV'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /IWBEP/I_V4_MSRV TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/IWBEP/I_V4_MSRV'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

MOVE /IWBEP/I_V4_MSRV-SERVICE_ID TO
/IWBEP/I_V4_MSRT-SERVICE_ID .
MOVE /IWBEP/I_V4_MSRV-SERVICE_VERSION TO
/IWBEP/I_V4_MSRT-SERVICE_VERSION .
MOVE SY-LANGU TO
/IWBEP/I_V4_MSRT-LANGUAGE .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = '/IWBEP/I_V4_MSRT'.
  IF NOT <vim_corr_keyx> IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO <vim_corr_keyx> CASTING.
  ENDIF.
  ASSIGN /IWBEP/I_V4_MSRT TO <TAB_KEY_X> CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING '/IWBEP/I_V4_MSRT'
    CHANGING TRSP_KEYLEN.
  <VIM_CORR_KEYX>(TRSP_KEYLEN) = <TAB_KEY_X>(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
